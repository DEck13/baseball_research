min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
Omega <- diag(exp(c(1,2)))
Omega0 <- diag(exp(-seq(-1,2, length = 6)))
beta <- Gamma %*% t(Gamma) %*% 1:p/p
SigmaX <- Gamma%*%Omega%*%t(Gamma) + Gamma0%*%Omega0%*%t(Gamma0)
eig <- eigen(SigmaX)
SigmaX.half <- eig$vec %*% diag(sqrt(eig$val)) %*% t(eig$vec)
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
Omega <- diag(exp(c(1,2)))
Omega0 <- diag(exp(-seq(1,2, length = 6)))
beta <- Gamma %*% t(Gamma) %*% 1:p/p
SigmaX <- Gamma%*%Omega%*%t(Gamma) + Gamma0%*%Omega0%*%t(Gamma0)
eig <- eigen(SigmaX)
SigmaX.half <- eig$vec %*% diag(sqrt(eig$val)) %*% t(eig$vec)
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
X <- matrix(rnorm(n*p), nrow = n) %*% SigmaX.half
Y <- rbinom(n, size = 1, prob =
1 / (1 + exp(-as.numeric(X %*% beta))))
data_sim <- as.data.frame(cbind(Y, X))
m1 <- glm(Y ~ -1 + ., family = "binomial",
data = data_sim, x =TRUE, y = TRUE)
ll <- Logistic_cov(X = X, Y = Y, a =0, b = coef(m1))
oneD <- oneD_bic(M = ll$M, U = ll$U, n = n, C = 1, maxdim = p)
bic_val <- oneD$bicval
min_bic <- min(bic_val)
w <- exp(min_bic - bic_val) / sum(exp(min_bic - bic_val))
w
set.seed(13)
clust <- makeCluster(14)
clust <- makeCluster(14)
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable~0+Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
set.seed(13)
clust <- makeCluster(14)
clust <- makeCluster(14)
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable~0+as.numeric(Subject)),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable~Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
summary(m2)
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable~ 0 + Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable ~ Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable ~ Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
summary(m2)
?glmm
head(ctsib)
str(ctsib)
ctsib <- ctsib %>% mutate(Subject = as.numeric(Subject))
system.time(m2 <- glmm(stable ~ 0 + Sex + Age + Height + Weight +
Surface + Vision, list(stable ~ 0 + Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
system.time(m3 <- glmm(stable ~ 0 + Subject + Sex + Age + Height +
Weight + Surface + Vision, list(stable ~ 0 + Subject),
family.glmm=bernoulli.glmm, m = 10^3,
varcomps.names = "Subject", cluster = clust,
data=ctsib))
?ctsib
rm(list = ls())
# load in UN dataset and remove irrelevant variables
library(dplyr)
library(stringr)
library(knitr)
options(warn=-1)
population_data <- read.csv("population.csv", header = TRUE)[, -1] %>%
mutate(age20 = age20 / 1e3, age25 = age25 / 1e3) %>%
filter(year > 1950)
getwd()
setwd("~/research/baseball/baseball_research/Challenging_nostalgia/")
# load in UN dataset and remove irrelevant variables
library(dplyr)
library(stringr)
library(knitr)
options(warn=-1)
population_data <- read.csv("population.csv", header = TRUE)[, -1] %>%
mutate(age20 = age20 / 1e3, age25 = age25 / 1e3) %>%
filter(year > 1950)
# restrict attention to countries of interest
countries <- c("Aruba", "Bahamas", "Brazil", "Colombia", "Cuba",
"Dominican Republic", "Honduras", "Jamaica", "Japan", "Mexico",
"Netherlands Antilles", "Nicaragua", "Panama", "Philippines", "Peru",
"Puerto Rico", "Republic of Korea", "Taiwan",
"Venezuela (Bolivarian Republic of)", "United States Virgin Islands",
"Canada", "United States of America")
# trim population dataset
foo <- population_data[population_data$region %in% countries, ]
foo$region <- droplevels(foo$region)
bar <- split(foo, f = as.factor(foo$region))
population_data <- read.csv("population.csv", header = TRUE)[, -1] %>%
mutate(age20 = age20 / 1e3, age25 = age25 / 1e3) %>%
filter(year > 1950) %>% mutate(region = as.factor(region))
# restrict attention to countries of interest
countries <- c("Aruba", "Bahamas", "Brazil", "Colombia", "Cuba",
"Dominican Republic", "Honduras", "Jamaica", "Japan", "Mexico",
"Netherlands Antilles", "Nicaragua", "Panama", "Philippines", "Peru",
"Puerto Rico", "Republic of Korea", "Taiwan",
"Venezuela (Bolivarian Republic of)", "United States Virgin Islands",
"Canada", "United States of America")
# trim population dataset
foo <- population_data[population_data$region %in% countries, ]
foo$region <- droplevels(foo$region)
bar <- split(foo, f = as.factor(foo$region))
# highlight countries that will be included starting in 2000
asian_countries <- c("Japan", "Philippines", "Republic of Korea", "Taiwan")
# extract relevant age 20-29 totals
baz <- lapply(bar, function(xx){
region <- unique(xx$region)
# only include age 20-24 males from Brazil staring in 2010
if(region == "Brazil"){
xx <- (xx %>% filter(year >= 2010))
xx$age25 <- 0
xx <- xx %>% mutate(total = age20 + age25) %>%
dplyr::select("year", "total")
}
# filter out Asian countries
else if(region %in% asian_countries){
xx <- xx %>% mutate(total = age20 + age25) %>%
dplyr::select("year", "total") %>% filter(year >= 2000)
}
else{
xx <- xx %>% mutate(total = age20 + age25) %>%
dplyr::select("year", "total")
}
})
#approximation from CIA World Factbook at
#https://www.cia.gov/library/publications/the-world-factbook/geos/print_tw.html
baz$'Taiwan' <-data.frame(year = c(2000, 2010), total = c(1.5, 1.5))
### Canadian population before 1960
#https://www65.statcan.gc.ca/acyb02/1907/acyb02_1907001701a-eng.htm
Can1881 <- 0.21 + 0.17
#https://www65.statcan.gc.ca/acyb02/1907/acyb02_1907001701a-eng.htm
Can1891 <- 0.24 + 0.19
#https://www65.statcan.gc.ca/acyb02/1907/acyb02_1907001701a-eng.htm
Can1901 <- 0.26 + 0.22
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
CanM1881 <- 2.19
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
CanM1891 <- 2.16
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
CanM1901 <- 2.75
propCan2030 <- (Can1881 + Can1891 + Can1901) /
(CanM1881 + CanM1891 + CanM1901)
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
Can1911 <- 3.82 * propCan2030
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
Can1921 <- 4.53 * propCan2030
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
Can1931 <- 5.37 * propCan2030
#https://www65.statcan.gc.ca/acyb02/1947/acyb02_19470113009-eng.htm
Can1941 <- 5.90 * propCan2030
#https://www65.statcan.gc.ca/acyb02/1967/acyb02_19670194010-eng.htm
Can1951 <- 7.09 * propCan2030
### US population before 1960
#https://www2.census.gov/library/publications/decennial/1880/vol-01-population/1880_v1-15.pdf
US1880 <- 2.22 + 1.84
#https://www2.census.gov/library/publications/decennial/1900/volume-2/volume-2-p5.pdf
US1900 <- 2.73 + 2.37
US1890 <- mean(c(US1880,US1900))
#https://www2.census.gov/library/publications/decennial/1910/volume-1/volume-1-p6.pdf
US1910 <- 4.07 + 3.79
#https://www2.census.gov/library/publications/decennial/1920/volume-2/41084484v2ch03.pdf
US1920 <- 4.02 + 4.09
#https://www2.census.gov/library/publications/decennial/1930/population-volume-2/16440598v2ch11.pdf
US1930 <- 4.69 + 4.25
#https://www2.census.gov/library/publications/decennial/1940/population-volume-4/33973538v4p1ch1.pdf
US1940 <- 1.08 + 1.06 + 1.01 + 1.00 + 1.01 +
1.01 + 0.99 + 0.98 + 0.97 + 0.95
#https://www2.census.gov/library/publications/decennial/1950/population-volume-2/21983999v2p1ch2.pdf
US1950 <- 5.00 + 5.30
# get post 1960 population totals
qux <- do.call(rbind, baz)
pops_year_post1950 <- unlist(lapply(split(qux, f = as.factor(qux$year)),
function(xx) sum(xx$total)))
# build MLB eligible population
pops <- as.numeric(c(US1880 + Can1881,
US1890 + Can1891,
US1900 + Can1901,
US1910 + Can1911,
US1920 + Can1921,
US1930 + Can1931,
US1940 + Can1941,
US1950 + Can1951,
pops_year_post1950))
pops <- c(pops, pops[14]/2)
# proportion of total population in current year and previous years
pop_prop <- cumsum(pops) / sum(pops)
# build the dataset
year <- c(1880 + 0:13 * 10, 2015)
dat <- cbind(year, pops, pop_prop)
dat[, 2] <- round(dat[, 2], 2)
dat
# population data over 1901-1996
dat2 <- dat[3:13, ]
dat2
dat2[11, 2] <- 0.6 * dat2[11, 2]
dat2[, 3] <- cumsum(dat2[, 2]) / sum(dat2[, 2])
dat2
# proportion of MLB eligible population who started their career
# before 1950
p2 <- dat2[6, 3]
# Binomial probabilities for Berry's top 10 and top 25 lists
bridge10 <- 6; bridge25 <- 10
pbridge10 <- pbinom(bridge10 - 1, p = p2, size = 10, lower = FALSE)
pbridge25 <- pbinom(bridge25 - 1, p = p2, size = 25, lower = FALSE)
pbridge10
pbridge25
# population data over 1901-1996
dat2 <- dat[3:13, ]
dat2[1, 2] <- 0.9 * dat2[1, 2]
dat2[11, 2] <- 0.6 * dat2[11, 2]
dat2[, 3] <- cumsum(dat2[, 2]) / sum(dat2[, 2])
# proportion of MLB eligible population who started their career
# before 1950
p2 <- dat2[6, 3]
# Binomial probabilities for Berry's top 10 and top 25 lists
bridge10 <- 6; bridge25 <- 10
pbridge10 <- pbinom(bridge10 - 1, p = p2, size = 10, lower = FALSE)
pbridge25 <- pbinom(bridge25 - 1, p = p2, size = 25, lower = FALSE)
pbridge10
pbridge25
# Binomial probabilities for Berry's top 10 and top 25 lists
full10 <- 5; full25 <- 9
pfull10 <- pbinom(full10 - 1, p = p2, size = 10, lower = FALSE)
pfull25 <- pbinom(full25 - 1, p = p2, size = 25, lower = FALSE)
pfull10
pfull25
